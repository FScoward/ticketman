-- MySQL Script generated by MySQL Workbench
-- 09/14/16 22:11:32
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ticketman
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ticketman
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticketman` DEFAULT CHARACTER SET utf8mb4 ;
USE `ticketman` ;

-- -----------------------------------------------------
-- Table `ticketman`.`ARTISTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`ARTISTS` (
  `artist_id` BIGINT NOT NULL COMMENT '',
  `artist_name` VARCHAR(100) NOT NULL COMMENT '',
  PRIMARY KEY (`artist_id`)  COMMENT '',
  UNIQUE INDEX `artist_name_UNIQUE` (`artist_name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`USERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`USERS` (
  `user_id` BIGINT NOT NULL COMMENT '',
  `user_name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`user_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`PLACES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`PLACES` (
  `place_name` VARCHAR(45) NOT NULL COMMENT '',
  `address` VARCHAR(45) NOT NULL COMMENT '',
  `prefecture` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`place_name`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`LIVES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`LIVES` (
  `live_id` BIGINT NOT NULL COMMENT '',
  `live_name` VARCHAR(45) NOT NULL COMMENT '',
  `PLACES_place_name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`live_id`)  COMMENT '',
  INDEX `fk_LIVES_PLACES1_idx` (`PLACES_place_name` ASC)  COMMENT '',
  CONSTRAINT `fk_LIVES_PLACES1`
    FOREIGN KEY (`PLACES_place_name`)
    REFERENCES `ticketman`.`PLACES` (`place_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`GROUPS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`GROUPS` (
  `group_id` BIGINT NOT NULL COMMENT '',
  `group_name` VARCHAR(45) NOT NULL COMMENT '',
  `LIVES_live_id` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`group_id`, `LIVES_live_id`)  COMMENT '',
  INDEX `fk_GROUPS_LIVES1_idx` (`LIVES_live_id` ASC)  COMMENT '',
  CONSTRAINT `fk_GROUPS_LIVES1`
    FOREIGN KEY (`LIVES_live_id`)
    REFERENCES `ticketman`.`LIVES` (`live_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`TICKETS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`TICKETS` (
  `ticket_id` BIGINT NOT NULL COMMENT '',
  `status` VARCHAR(45) NOT NULL COMMENT '',
  `group_id` BIGINT NOT NULL COMMENT '',
  `owner_id` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`ticket_id`)  COMMENT '',
  INDEX `fk_TICKETS_GROUPS1_idx` (`group_id` ASC)  COMMENT '',
  INDEX `fk_TICKETS_USERS1_idx` (`owner_id` ASC)  COMMENT '',
  CONSTRAINT `fk_TICKETS_GROUPS1`
    FOREIGN KEY (`group_id`)
    REFERENCES `ticketman`.`GROUPS` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TICKETS_USERS1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `ticketman`.`USERS` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`ARTISTS_has_LIVES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`ARTISTS_has_LIVES` (
  `ARTISTS_artist_id` BIGINT NOT NULL COMMENT '',
  `LIVES_live_id` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`ARTISTS_artist_id`, `LIVES_live_id`)  COMMENT '',
  INDEX `fk_ARTISTS_has_LIVES_LIVES1_idx` (`LIVES_live_id` ASC)  COMMENT '',
  INDEX `fk_ARTISTS_has_LIVES_ARTISTS1_idx` (`ARTISTS_artist_id` ASC)  COMMENT '',
  CONSTRAINT `fk_ARTISTS_has_LIVES_ARTISTS1`
    FOREIGN KEY (`ARTISTS_artist_id`)
    REFERENCES `ticketman`.`ARTISTS` (`artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ARTISTS_has_LIVES_LIVES1`
    FOREIGN KEY (`LIVES_live_id`)
    REFERENCES `ticketman`.`LIVES` (`live_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketman`.`GROUPS_has_USERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ticketman`.`GROUPS_has_USERS` (
  `GROUPS_group_id` BIGINT NOT NULL COMMENT '',
  `GROUPS_LIVES_live_id` BIGINT NOT NULL COMMENT '',
  `USERS_user_id` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`GROUPS_group_id`, `GROUPS_LIVES_live_id`, `USERS_user_id`)  COMMENT '',
  INDEX `fk_GROUPS_has_USERS_USERS1_idx` (`USERS_user_id` ASC)  COMMENT '',
  INDEX `fk_GROUPS_has_USERS_GROUPS1_idx` (`GROUPS_group_id` ASC, `GROUPS_LIVES_live_id` ASC)  COMMENT '',
  CONSTRAINT `fk_GROUPS_has_USERS_GROUPS1`
    FOREIGN KEY (`GROUPS_group_id` , `GROUPS_LIVES_live_id`)
    REFERENCES `ticketman`.`GROUPS` (`group_id` , `LIVES_live_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GROUPS_has_USERS_USERS1`
    FOREIGN KEY (`USERS_user_id`)
    REFERENCES `ticketman`.`USERS` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
